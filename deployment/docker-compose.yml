# Production-ready setup.
# Uses the newest `stable` image of the `master` branch.
# a traefik instance handles exposition of service instances.
# All services are expected to be started, hence the following command
# must be run to start the docker setup:
#
#   docker-compose up
#
# Add the `-d` flag to daemonize the containers.
#
# Updating the images is as easy as this:
#
#   docker-compose pull && docker-compose restart
#
# ..Note::
#
#   The above commands assume you're already in the directory where
#   where this docker-compose file is located.
version: '3.4'

x-defaults: &defaults
  restart: always
  env_file: .env
  image: raidennetwork/raiden-services:latest
  volumes:
    - /data/state:/state
    - /data/keystore:/keystore

services:
  pfs-ropsten:
    << : *defaults
    build: ../
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://geth.ropsten.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-ropsten.db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-ropsten.services-dev.raiden.network"

  pfs-ropsten-with-fee:
    << : *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://geth.ropsten.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-ropsten-with-fee.db
      - PFS_SERVICE_FEE=10
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-ropsten-with-fee.services-dev.raiden.network"

  pfs-rinkeby:
    << : *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://geth.rinkeby.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-rinkeby.db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-rinkeby.services-dev.raiden.network"

  pfs-rinkeby-with-fee:
    << : *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://geth.rinkeby.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-rinkeby-with-fee.db
      - PFS_SERVICE_FEE=10
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-rinkeby-with-fee.services-dev.raiden.network"

  pfs-kovan:
    << : *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://parity.kovan.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-kovan.db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-kovan.services-dev.raiden.network"

  pfs-kovan-with-fee:
    << : *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://parity.kovan.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-kovan-with-fee.db
      - PFS_SERVICE_FEE=10
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-kovan-with-fee.services-dev.raiden.network"

  pfs-goerli:
    <<: *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://parity.goerli.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-goerli.db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-goerli.services-dev.raiden.network"

  pfs-goerli-with-fee:
    <<: *defaults
    command: ["python3", "-m", "pathfinding_service.cli", "--enable-debug"]
    environment:
      - PFS_ETH_RPC=http://parity.goerli.ethnodes.brainbot.com:8545
      - PFS_STATE_DB=/state/pfs-goerli-with-fee.db
      - PFS_SERVICE_FEE=10
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: pfs-goerli-with-fee.services-dev.raiden.network"

  ms-ropsten:
    <<: *defaults
    command: ["python3", "-m", "monitoring_service.cli"]
    environment:
      - MS_ETH_RPC=http://geth.ropsten.ethnodes.brainbot.com:8545
      - MS_STATE_DB=/state/ms-ropsten.db

  ms-rinkeby:
    <<: *defaults
    command: ["python3", "-m", "monitoring_service.cli"]
    environment:
      - MS_ETH_RPC=http://geth.rinkeby.ethnodes.brainbot.com:8545
      - MS_STATE_DB=/state/ms-rinkeby.db

  ms-kovan:
    <<: *defaults
    command: ["python3", "-m", "monitoring_service.cli"]
    environment:
      - MS_ETH_RPC=http://parity.kovan.ethnodes.brainbot.com:8545
      - MS_STATE_DB=/state/ms-kovan.db

  ms-goerli:
    <<: *defaults
    command: ["python3", "-m", "monitoring_service.cli"]
    environment:
      - MS_ETH_RPC=http://parity.goerli.ethnodes.brainbot.com:8545
      - MS_STATE_DB=/state/ms-goerli.db

  ms-goerli-backup:
    <<: *defaults
    command: ["python3", "-m", "monitoring_service.cli"]
    environment:
      - MS_ETH_RPC=http://parity.goerli.ethnodes.brainbot.com:8545
      - MS_STATE_DB=/state/ms-goerli-backup.db
      - MS_KEYSTORE_FILE=${MS_BACKUP_KEYSTORE_FILE}
      - MS_PASSWORD=${MS_BACKUP_PASSWORD}

  msrc-ropsten:
    <<: *defaults
    command: ["python3", "-m", "request_collector.cli"]
    environment:
      - MSRC_CHAIN_ID=ropsten
      - MSRC_STATE_DB=/state/ms-ropsten.db
    depends_on:
      - ms-ropsten

  msrc-rinkeby:
    <<: *defaults
    command: ["python3", "-m", "request_collector.cli"]
    environment:
      - MSRC_CHAIN_ID=rinkeby
      - MSRC_STATE_DB=/state/ms-rinkeby.db
    depends_on:
      - ms-rinkeby

  msrc-kovan:
    <<: *defaults
    command: ["python3", "-m", "request_collector.cli"]
    environment:
      - MSRC_CHAIN_ID=kovan
      - MSRC_STATE_DB=/state/ms-kovan.db
    depends_on:
      - ms-kovan

  msrc-goerli:
    <<: *defaults
    command: ["python3", "-m", "request_collector.cli"]
    environment:
      - MSRC_CHAIN_ID=goerli
      - MSRC_STATE_DB=/state/ms-goerli.db
    depends_on:
      - ms-goerli

  msrc-goerli-backup:
    <<: *defaults
    command: ["python3", "-m", "request_collector.cli"]
    environment:
      - MSRC_CHAIN_ID=goerli
      - MSRC_STATE_DB=/state/ms-goerli-backup.db
      - MSRC_KEYSTORE_FILE=${MS_BACKUP_KEYSTORE_FILE}
      - MSRC_PASSWORD=${MS_BACKUP_PASSWORD}
    depends_on:
      - ms-goerli-backup

  builder:
    restart: always
    build: ./builder
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root:/root
      - /root/.ssh:/root/.ssh:ro
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host: services-dev.raiden.network"

  traefik:
    image: traefik:1.7
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/traefik:/etc/traefik
      - ./data/traefik:/data
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - pfs-ropsten
      - pfs-rinkeby
      - pfs-kovan
      - pfs-goerli
      - pfs-ropsten-with-fee
      - pfs-rinkeby-with-fee
      - pfs-kovan-with-fee
      - pfs-goerli-with-fee
      - ms-ropsten
      - ms-rinkeby
      - ms-kovan
      - ms-goerli
      - ms-goerli-backup
      - msrc-ropsten
      - msrc-rinkeby
      - msrc-kovan
      - msrc-goerli
      - msrc-goerli-backup
      - builder
